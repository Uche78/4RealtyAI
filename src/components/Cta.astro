---
// CTA section component with Modal
---
<section class="py-12 sm:py-16 lg:py-24 bg-[#716a5c] text-brand-primary">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full">
    <!-- CTA Content -->
    <div class="text-center">
      <!-- Label -->
      <p class="font-sans mb-3 sm:mb-4 text-charcoal-500 text-xs sm:text-sm tracking-wide uppercase">
        Begin Your Journey
      </p>
      
      <!-- Headline -->
      <h2 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-semibold tracking-tight mb-4 sm:mb-6 leading-tight px-4 sm:px-8 lg:px-12">
        See How AI Can Add Real Value to Your Business
      </h2>
      
      <!-- Subheadline -->
      <p class="text-base sm:text-lg md:text-xl lg:text-2xl font-sans mb-8 sm:mb-10 lg:mb-12 px-4 sm:px-8 md:px-16 lg:px-24 xl:px-40 max-w-4xl mx-auto leading-relaxed">
        You don't need to master AI to benefit from it, you just need the right guidance.
      </p>
      
      <!-- CTA Button that opens modal -->
      <button 
        id="openModalBtn"
        class="inline-flex items-center justify-center px-6 sm:px-8 lg:px-12 py-3 sm:py-4 bg-[#2c2c2c] text-brand-primary rounded-full font-medium hover:bg-brand-primary hover:text-charcoal-800 transition-all duration-300 text-sm sm:text-base lg:text-lg shadow-lg hover:shadow-xl transform hover:scale-105"
      >
        <span>Click here and see how it works</span>
        <svg class="w-4 h-4 ml-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </button>
    </div>
  </div>
</section>

<!-- Modal Overlay -->
<div id="formModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
  <!-- Modal Container -->
  <div class="bg-[#e7e5e0] rounded-lg w-full max-w-lg mx-auto shadow-2xl transform transition-all scale-95 opacity-0 modal-content">
    <!-- Modal Content -->
    <div class="p-6 sm:p-8 lg:p-10">
      <!-- Close Button -->
      <button 
        id="closeModalBtn"
        class="absolute top-4 right-4 text-brand-text hover:text-white transition-colors p-2 rounded-full hover:bg-slate-600"
        aria-label="Close modal"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>

      <!-- Modal Header -->
      <div class="mb-6 sm:mb-8">
        <h3 class="text-2xl sm:text-3xl text-brand-text mb-4 text-center">
          See how fast it works!
        </h3>
      </div>

      <!-- Form -->
      <form id="ctaForm" class="space-y-4 sm:space-y-5">
        <!-- Full Name -->
        <div>
          <input 
            type="text" 
            name="fullName"
            placeholder="Full Name"
            required
            class="w-full px-4 sm:px-5 py-3 sm:py-4 bg-brand-primary border-2 border-transparent focus:border-brand-primary focus:ring-2 focus:ring-[#e7e5e0] focus:ring-opacity-50 rounded-lg text-charcoal-800 placeholder-warm-600 transition-all duration-200 text-sm sm:text-base"
          >
        </div>

        <!-- Business Email -->
        <div>
          <input 
            type="email" 
            name="businessEmail"
            placeholder="Business Email*"
            required
            class="w-full px-4 sm:px-5 py-3 sm:py-4 bg-brand-primary border-2 border-transparent focus:border-brand-primary focus:ring-2 focus:ring-brand-primary focus:ring-opacity-50 rounded-lg text-charcoal-800 placeholder-warm-600 transition-all duration-200 text-sm sm:text-base"
          >
        </div>

        <!-- Phone with Country Code -->
        <div class="flex gap-2">
          <div class="w-20 sm:w-24 flex-shrink-0">
            <select 
              name="countryCode"
              id="countryCode"
              class="w-full h-full px-2 sm:px-3 py-3 sm:py-4 bg-cream-100 border-2 border-transparent focus:border-brand-primary focus:ring-2 focus:ring-brand-primary focus:ring-opacity-50 rounded-lg text-charcoal-800 transition-all duration-200 text-sm sm:text-base"
            >
              <option value="+1">ðŸ‡¨ðŸ‡¦ +1</option>
              <option value="+1">ðŸ‡ºðŸ‡¸ +1</option>
              <option value="+44">ðŸ‡¬ðŸ‡§ +44</option>
              <option value="+61">ðŸ‡¦ðŸ‡º +61</option>
            </select>
          </div>
          <input 
            type="tel" 
            name="phone"
            id="phone"
            placeholder="Phone*"
            required
            pattern="[0-9]{10}"
            class="flex-1 px-4 sm:px-5 py-3 sm:py-4 bg-cream-100 border-2 border-transparent focus:border-brand-primary focus:ring-2 focus:ring-brand-primary focus:ring-opacity-50 rounded-lg text-charcoal-800 placeholder-warm-600 transition-all duration-200 text-sm sm:text-base"
          >
        </div>

        <!-- Disclaimer Text -->
        <p class="text-xs sm:text-sm text-brand-text text-center">
          *Test calls available in US & Canada only. Sign up free. We serve customers worldwide.
        </p>


        <!-- Submit Button -->
        <button 
          type="submit"
          id="submitBtn"
          class="w-full bg-brand-text text-brand-primary px-6 py-3 sm:py-4 rounded-full font-semibold hover:bg-black transition-all duration-300 text-base sm:text-lg shadow-lg hover:shadow-xl transform disabled:opacity-50 disabled:cursor-not-allowed"
        >
          <span class="submit-text">Talk to AI</span>
          <span class="loading-text hidden">
            <svg class="animate-spin inline-block w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Initiating call...
          </span>
        </button>

        <!-- Privacy Links -->
        <div class="text-center text-xs sm:text-sm text-brand-text">
          <a href="/privacy" class="hover:text-black transition-colors">Privacy Policy</a>
          <span class="mx-2">|</span>
          <a href="/terms" class="hover:text-black transition-colors">Terms of Service</a>
        </div>
      </form>

      <!-- Success Message (hidden by default) -->
      <div id="successMessage" class="hidden text-center space-y-4">
        <div class="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto">
          <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
          </svg>
        </div>
        <h4 class="text-2xl text-brand-text">Call Initiated!</h4>
        <p class="text-brand-text">You should receive a call from our AI agent within the next 30 seconds.</p>
        <p class="text-sm text-brand-text">Please answer your phone to experience how 4RealtyAI works.</p>
        <button 
          id="closeSuccessBtn"
          class="mt-6 bg-brand-text text-brand-primary px-8 py-3 rounded-full font-semibold hover:bg-black transition-all duration-300"
        >
          Close
        </button>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', function() {
    const openModalBtn = document.getElementById('openModalBtn');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const closeSuccessBtn = document.getElementById('closeSuccessBtn');
    const formModal = document.getElementById('formModal');
    const ctaForm = document.getElementById('ctaForm');
    const submitBtn = document.getElementById('submitBtn');
    const successMessage = document.getElementById('successMessage');

    if (!openModalBtn || !closeModalBtn || !closeSuccessBtn || !formModal || !ctaForm || !submitBtn || !successMessage) {
      console.warn('One or more CTA elements are missing from the DOM.');
      return;
    }

    const modalContent = formModal.querySelector('.modal-content');
    const submitText = submitBtn.querySelector('.submit-text');
    const loadingText = submitBtn.querySelector('.loading-text');

    if (!modalContent || !submitText || !loadingText) {
      console.warn('Modal content elements not found.');
      return;
    }

    // Open modal
    openModalBtn.addEventListener('click', function() {
      formModal.classList.remove('hidden');
      document.body.classList.add('overflow-hidden');
      setTimeout(() => {
        modalContent.classList.remove('scale-95', 'opacity-0');
        modalContent.classList.add('scale-100', 'opacity-100');
      }, 10);
    });

    // Close modal function
    function closeModal() {
      modalContent.classList.remove('scale-100', 'opacity-100');
      modalContent.classList.add('scale-95', 'opacity-0');

      setTimeout(() => {
        formModal.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
        ctaForm.classList.remove('hidden');
        successMessage.classList.add('hidden');
        ctaForm.reset();
      }, 300);
    }

    closeModalBtn.addEventListener('click', closeModal);
    closeSuccessBtn.addEventListener('click', closeModal);

    formModal.addEventListener('click', function(e) {
      if (e.target === formModal) closeModal();
    });

    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !formModal.classList.contains('hidden')) closeModal();
    });

    // Form submission handler
    ctaForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      submitBtn.disabled = true;
      submitText.classList.add('hidden');
      loadingText.classList.remove('hidden');

      const formData = new FormData(ctaForm);
      const countryCode = formData.get('countryCode') || '';
      const phone = formData.get('phone') || '';
      const fullPhoneNumber = `${countryCode}${phone}`;

      const data = {
        fullName: formData.get('fullName'),
        email: formData.get('businessEmail'),
        phone: fullPhoneNumber
      };

      try {
        const response = await fetch('/api/initiate-call', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });

        if (!response.ok) throw new Error('Failed to initiate call');

        await response.json();

        ctaForm.classList.add('hidden');
        successMessage.classList.remove('hidden');
      } catch (error) {
        console.error('Error:', error);
        alert('Something went wrong. Please try again or contact us directly.');
      } finally {
        submitBtn.disabled = false;
        submitText.classList.remove('hidden');
        loadingText.classList.add('hidden');
      }
    });
  });
</script>


<style>
  /* Smooth transitions for modal */
  .modal-content {
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  }
  
  /* Prevent body scroll when modal is open */
  body.overflow-hidden {
    overflow: hidden;
  }
  
  /* Custom scrollbar for modal if content overflows */
  .modal-content {
    max-height: 90vh;
    overflow-y: auto;
  }
  
  .modal-content::-webkit-scrollbar {
    width: 8px;
  }
  
  .modal-content::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 10px;
  }
  
  .modal-content::-webkit-scrollbar-thumb {
    background: #E6DED9;
    border-radius: 10px;
  }
  
  .modal-content::-webkit-scrollbar-thumb:hover {
    background: #d5d0c8;
  }
  
  /* Loading spinner animation */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
</style>
